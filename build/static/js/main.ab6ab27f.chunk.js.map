{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAiBhD,OAEI,sBAAMC,SAXU,SAAEC,GACdA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAe,MAMvB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SAnBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,OCNnBG,EAAc,SAAC,GAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IAGtC,OAFAC,QAAQC,IAAIJ,EAAIC,EAAMC,GAGlB,sBAAKG,UAAU,sBAAf,UACI,qBAAKC,IAAOJ,EAAMK,IAAON,IACzB,kCAAMA,EAAN,W,uBCNCO,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbR,EADa,0FAC6ES,UAAUF,GADvF,sBAEAG,MAAOV,GAFP,cAEbW,EAFa,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBlB,QATvB,kBAYXc,GAZW,4CAAH,sDCGPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEdvB,mBAAS,CACnC6B,KAAM,GACNO,SAAS,IAJ+B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAsBxC,OAdAC,qBAAW,WAEPjB,EAASC,GACRiB,MAAM,SAAAC,GACHH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAIlB,CAAEb,IAIEc,EDlB2BK,CAAcnB,GAAnCU,EAFwB,EAE7BJ,KAAaO,EAFgB,EAEhBA,QAGrB,OACA,qCACI,qBAAIjB,UAAU,iBAAd,cAAkCI,EAAlC,OACGa,GAAW,mBAAGjB,UAAU,wBAAb,qBAEd,qBAAKA,UAAU,aAAf,SAEYc,EAAOF,KAAK,SAAAC,GAAG,OACX,wBAAC,EAAD,2BACKA,GADL,IAEAW,IAAKX,EAAIlB,WAKzB,iEESO8B,EA9BM,WAAO,MAIY5C,mBAAS,CAAE,cAJvB,mBAIjB6C,EAJiB,KAIL9C,EAJK,KAOxB,OACI,qCAEI,8CACA,wEACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAGA,6BAEQ8C,EAAWd,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAYA,GADLA,Y,MClB/BuB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ab6ab27f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( { setCategories } ) => {\n    \n    const [inputValue, setInputValue] = useState('');\n    \n    const handleInputChange = ( e ) => {  \n        setInputValue( e.target.value );\n    }\n\n    const handleSumit = ( e ) => {\n            e.preventDefault();\n\n            if ( inputValue.trim().length > 2) {\n                setCategories( cats => [ inputValue, ...cats ] );\n                setInputValue ('');\n            }\n    }\n\n    return (\n        \n        <form onSubmit= { handleSumit }> \n            <input\n                type=\"text\"\n                value= { inputValue }\n                onChange= { handleInputChange }    \n            />\n        </form>    \n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","import React from 'react'\n\nexport const GifGridItem = ( { id, title, url } ) => {\n    console.log(id, title,url)\n    \n    return (\n        <div className=\"card animate__pulse\">\n            <img src= { url } alt= { title } />\n            <p> { title } </p>\n        </div>\n    )\n}\n\n","\n\nexport const getGifs = async( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=uZ2bsEyrTKDhpMYdPUuTxvOOo0NiR5Pz&q=${ encodeURI(category) }&limit=10`;\n    const resp = await fetch( url );\n    const {data}  = await resp.json();\n    \n    const gifs = data.map ( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n     return gifs;\n   \n}","\nimport React, { useState, useEffect } from 'react'\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({ category }) => {\n    \n    const { data:images, loading } =  useFetchGifs( category );\n\n\n    return (\n    <>\n        <h3 className=\"animate__pulse\"> { category } </h3>\n        {  loading && <p className=\"animate__fadeOutRight\">Loading</p>  }\n\n        <div className=\"card-grid \">\n                {\n                    images.map( img => (\n                        <GifGridItem \n                        { ...img } \n                        key={img.id }\n                        />\n                    ))\n                }\n        </div>\n        <footer> Created by @antuansabe</footer>\n    </>    \n    )\n}\n","import { useState, useEffect } from 'react'\nimport { getGifs }  from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n    \n    const [state, setstate] = useState({ \n    data: [],\n    loading: true\n    });\n\n\n    useEffect( () => {\n        \n        getGifs( category )\n        .then( imgs => {\n            setstate({\n                data: imgs,\n                loading: false\n            })\n        } )\n\n    }, [ category ])\n\n    \n\n    return state;  // {   data: [], loading: true}\n    }\n","import React, { useState } from 'react'; \nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = ()  => {\n\n   // const categories = [ 'One Punch', 'Smurai X', 'Dragon Ball'];\n   // En lugar de usar una constante normal, usaremos un Hook ( useState)\n    const [categories, setCategories] = useState([ 'One Punch'])\n    \n\n    return (\n        <>  \n            \n            <h2>GifExpertApp</h2>\n            <h5>La forma mas rapida de encontrar Gifs!</h5>\n            <AddCategory setCategories = { setCategories }  />\n            <hr />\n\n        \n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid \n                        key= { category }\n                        category= { category }\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}